name: üõ†Ô∏è Cr√©er un article depuis une Issue

on:
  issues:
    types: [opened, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-post:
    if: contains(github.event.issue.labels.*.name, 'article')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üëâüèº master
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Fix remote HEAD üõ†
        run: |
          git remote set-head origin -a

      - name: Extraction des donn√©es de l'Issue
        id: extract
        run: |
          echo "${{ github.event.issue.body }}" > issue_body.txt

          TITLE=$(awk '/^### Titre de l'\''Article/ {while (getline && $0 == ""); print}' issue_body.txt | xargs)
          DESCRIPTION=$(awk '/^### Description/ {while (getline && $0 == ""); print}' issue_body.txt | xargs)
          CONTENT=$(awk '/^### Contenu complet/ {flag=1; next} /^### Auteur/ {flag=0} flag' issue_body.txt | sed 's/\r//' )
          AUTHOR=$(awk '/^### Auteur/ {while (getline && $0 == ""); print}' issue_body.txt | xargs)
          TAGS=$(awk '/^### Tags/ {while (getline && $0 == ""); print}' issue_body.txt | xargs)

          echo "DEBUG: TITLE='$TITLE'"
          echo "DEBUG: DESCRIPTION='$DESCRIPTION'"
          echo "DEBUG: AUTHOR='$AUTHOR'"
          echo "DEBUG: TAGS='$TAGS'"

          # V√©rification des champs
          if [ -z "$TITLE" ]; then
            echo "‚ùå ERREUR: Le champ 'Titre' est vide dans l'issue." >&2
            exit 1
          fi

          if [ -z "$DESCRIPTION" ]; then
            echo "‚ùå ERREUR: Le champ 'Description' est vide dans l'issue." >&2
            exit 1
          fi

          if [ -z "$CONTENT" ]; then
            echo "‚ùå ERREUR: Le champ 'Contenu complet' est vide dans l'issue." >&2
            exit 1
          fi

          if [ -z "$AUTHOR" ]; then
            echo "‚ùå ERREUR: Le champ 'Auteur' est vide dans l'issue." >&2
            exit 1
          fi

          if [ -z "$TAGS" ]; then
            echo "‚ùå ERREUR: Le champ 'Tags' est vide dans l'issue." >&2
            exit 1
          fi

          echo "TITLE<<EOF" >> $GITHUB_ENV
          echo "$TITLE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "$DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
          echo "TAGS=$TAGS" >> $GITHUB_ENV


      - name: G√©n√©rer le slug et cr√©er la branche
        run: |
          echo "TITLE r√©cup√©r√©: '${{ env.TITLE }}'" # ‚ûî v√©rification visuelle
          slug=$(echo "${{ env.TITLE }}" | iconv -f utf8 -t ascii//TRANSLIT \
            | tr '[:upper:]' '[:lower:]' \
            | sed 's/[^a-z0-9]/-/g' \
            | sed 's/-\+/-/g' \
            | sed 's/^-//;s/-$//')

          echo "Slug g√©n√©r√©: $slug"

          echo "SLUG=$slug" >> $GITHUB_ENV

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b article-$slug

      - name: G√©n√©rer le fichier article
        run: |
          DATE=$(date +"%d-%m-%Y")
          FILE="src/content/posts/${{ env.SLUG }}.md"

          mkdir -p src/content/posts

          echo "---" > "$FILE"
          echo "title: \"${{ env.TITLE }}\"" >> "$FILE"
          echo "description: \"${{ env.DESCRIPTION }}\"" >> "$FILE"
          echo "createdAt: $DATE" >> "$FILE"
          echo "author: \"${{ env.AUTHOR }}\"" >> "$FILE"
          echo "draft: true" >> "$FILE"
          echo "tags:" >> "$FILE"
          for tag in $(echo "${{ env.TAGS }}" | tr ',' '\n'); do
            echo "  - $(echo $tag | xargs)" >> "$FILE"
          done
          echo "---" >> "$FILE"
          echo "" >> "$FILE"
          echo "${{ env.CONTENT }}" >> "$FILE"

      - name: Commit les changements
        run: |
          git add .
          git commit -m "üìù Proposer article: ${{ env.TITLE }}"

      - name: Push vers remote
        run: |
          git push --set-upstream origin article-${{ env.SLUG }}


      - name: Cr√©er Pull Request üîÄ
        uses: peter-evans/create-pull-request@v5
        with:
          title: "üìù Proposition: ${{ env.TITLE }}"
          body: |
            Article propos√© automatiquement depuis une Issue.
            Merci de le relire avant publication.
          base: master
          branch: article-${{ env.SLUG }}
