name: 🛠️ Créer un article depuis une Issue

on:
  issues:
    types: [opened, edited]

jobs:
  create-article:
    if: contains(github.event.issue.labels.*.name, 'article')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du dépôt
        uses: actions/checkout@v4

      - name: Nettoyer les données de l'Issue
        id: extract
        run: |
          # Extraction des champs
          TITLE="$(echo "${{ github.event.issue.body }}" | awk '/^### Titre de l.Article/{getline; print}' | xargs)"
          DESCRIPTION="$(echo "${{ github.event.issue.body }}" | awk '/^### Description/{getline; print}' | xargs)"
          CONTENT="$(echo "${{ github.event.issue.body }}" | awk '/^### Contenu complet/{getline; getline; print}' RS='' | sed 's/^/    /')"
          AUTHOR="$(echo "${{ github.event.issue.body }}" | awk '/^### Auteur/{getline; print}' | xargs)"
          TAGS="$(echo "${{ github.event.issue.body }}" | awk '/^### Tags/{getline; print}' | xargs)"

          # Nettoyage du titre pour créer un slug
          SLUG=$(echo "$TITLE" | iconv -f utf8 -t ascii//TRANSLIT | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g' | sed -E 's/^-+|-+$//g')

          # Date au format dd-MM-yyyy
          DATE=$(date +"%d-%m-%Y")

          echo "slug=$SLUG" >> $GITHUB_OUTPUT
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "content=$CONTENT" >> $GITHUB_OUTPUT

      - name: Créer l'article
        run: |
          mkdir -p content/posts

          FILE="content/posts/${{ steps.extract.outputs.slug }}.md"

          if [ -f "$FILE" ]; then
            echo "❌ Le fichier existe déjà, on stoppe."
            exit 1
          fi

          echo "---" > "$FILE"
          echo "title: \"${{ steps.extract.outputs.title }}\"" >> "$FILE"
          echo "description: \"${{ steps.extract.outputs.description }}\"" >> "$FILE"
          echo "createdAt: \"${{ steps.extract.outputs.date }}\"" >> "$FILE"
          echo "author: \"${{ steps.extract.outputs.author }}\"" >> "$FILE"
          echo "draft: true" >> "$FILE"
          echo "tags:" >> "$FILE"

          # Ajouter chaque tag proprement
          for tag in $(echo "${{ steps.extract.outputs.tags }}" | tr ',' '\n'); do
            echo "  - $(echo $tag | xargs)" >> "$FILE"
          done

          echo "---" >> "$FILE"
          echo "" >> "$FILE"
          echo "${{ steps.extract.outputs.content }}" >> "$FILE"

      - name: Commit + Push dans main
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "📝 Nouvel article: ${{ steps.extract.outputs.title }}"
          branch: main
